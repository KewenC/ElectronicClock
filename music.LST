C51 COMPILER V9.01   MUSIC                                                                 04/21/2018 02:05:33 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MUSIC
OBJECT MODULE PLACED IN music.OBJ
COMPILER INVOKED BY: D:\_AppPath\Keil\C51\BIN\C51.EXE music.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"music.h"
   2          unsigned char timer0h, timer0l, timer;
   3          uint isShow = 1;//1为显示，0为隐藏
   4          uchar Native_Flag = 0;
   5          uchar mHour,mMinute,mHour2,mMinute2;
   6          uint dd = 0;
   7          //--------------------------------------
   8          // 频率-半周期数据表 高八位     本软件共保存了四个八度的28个频率数据
   9          code unsigned char FREQH[] = {
  10              0xF2, 0xF3, 0xF5, 0xF5, 0xF6, 0xF7, 0xF8,    //低音1234567
  11              0xF9, 0xF9, 0xFA, 0xFA, 0xFB, 0xFB, 0xFC, 0xFC,//1,2,3,4,5,6,7,i
  12              0xFC, 0xFD, 0xFD, 0xFD, 0xFD, 0xFE,            //高音 234567
  13              0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFF};   //超高音 1234567
  14          
  15          // 频率-半周期数据表 低八位
  16          code unsigned char FREQL[] = {
  17              0x42, 0xC1, 0x17, 0xB6, 0xD0, 0xD1, 0xB6,    //低音1234567
  18              0x21, 0xE1, 0x8C, 0xD8, 0x68, 0xE9, 0x5B, 0x8F, //1,2,3,4,5,6,7,i
  19              0xEE, 0x44, 0x6B, 0xB4, 0xF4, 0x2D,             //高音 234567
  20              0x47, 0x77, 0xA2, 0xB6, 0xDA, 0xFA, 0x16};   //超高音 1234567
  21          //--------------------------------------
  22          //一个音符有三个数字。前为第几个音、中为第几个八度、后为时长（以半拍为单位）。
  23          
  24          code unsigned char sszymmh[] = {//送别
  25          5,2,2,3,2,1,5,2,1,1,3,4,6,2,2,1,3,2,5,2,4,5,2,2,1,2,1,2,2,1,3,1,1,2,2,1,1,2,1,2,2,4,
  26          5,2,2,3,2,1,5,2,1,1,3,3,7,2,1,6,2,2,1,3,2,5,2,4,5,2,2,2,2,1,3,2,1,4,2,3,7,1,1,1,2,4,};
  27          
  28          code unsigned char sszymmh2[] = {//望
  29          1,3,2,7,2,2,6,2,2,5,2,2,3,2,2,2,2,1,3,2,1,3,2,1,5,2,2,
  30          5,2,2,5,2,2,5,2,2,2,2,1,3,2,1,3,2,4,
  31          1,3,2,7,2,2,6,2,1,5,2,1,5,2,2,3,2,2,2,2,1,3,2,1,5,2,2,
  32          5,2,2,5,2,2,6,2,2,7,2,2,1,3,5,1,3,7};
  33          /*
  34          ,//...
  35          1,3,1,1,3,1,1,3,1,1,3,1,1,3,1,1,3,1,1,3,1,1,3,1,7,2,2,6,2,1,5,2,1,5,2,1,3,2,1,5,2,1,3,2,1,
  36          5,2,2,3,2,2,5,2,2,5,2,2,3,2,2,5,2,2,3,2,2,6,2,5,
  37          1,3,1,1,3,1,1,3,1,1,3,1,1,3,1,1,3,1,1,3,1,1,3,1,2,3,2,7,2,2,6,2,2,6,2,2,5,2,2,5,2,2,3,2,2,
  38          5,2,2,3,2,2,5,2,2,5,2,2,3,2,2,5,2,2,6,2,2,6,2,3,1,3,2,7,2,2,6,2,2,5,2,2,
  39          4,2,3,1,3,1,7,2,1,6,2,1,5,2,1,6,2,2,5,2,1,6,2,1,6,2,1,5,2,1,6,2,1,5,2,1,
  40          6,2,2,5,2,2,6,2,2,7,2,1,1,3,1,1,3,3,6,2,1,1,3,1,6,2,1,3,3,1,
  41          3,3,1,6,2,1,6,2,2,6,2,1,1,3,1,6,2,1,3,3,1,3,3,1,6,2,1,6,2,2,6,2,1,1,3,1,6,2,1,3,3,1,3,3,7};
  42          */
  43          code unsigned char sszymmh1[] = {//天空之城
  44          6,1,1,7,1,1,1,2,3,7,1,1,1,2,2,3,2,2,7,1,5,3,1,2,6,1,3,5,1,1,6,1,2,1,2,2,
  45          5,1,5,3,1,2,4,1,3,3,1,1,4,1,1,1,2,1,1,2,2,3,1,4,1,2,2};
  46          
  47          /*
  48           * 写Lcd字符串函数
  49           */
  50          void WriteDataString(unsigned char *str){
  51   1          while(*str){
  52   2              LcdWriteData(*str);
  53   2              str++;
  54   2          }
  55   1      }
C51 COMPILER V9.01   MUSIC                                                                 04/21/2018 02:05:33 PAGE 2   

  56          
  57          /*
  58           * 中断函数
  59           */
  60          void t0int() interrupt 1         //T0中断程序，控制发音的音调
  61          {
  62   1          TR0 = 0;                     //先关闭T0
  63   1          speaker = !speaker;          //输出方波, 发音
  64   1          TH0 = timer0h;               //下次的中断时间, 这个时间, 控制音调高低
  65   1          TL0 = timer0l;
  66   1          TR0 = 1;                     //启动T0
  67   1      }
  68          //--------------------------------------
  69          void delay1(unsigned char t)     //延时程序，控制发音的时间长度
  70          {
  71   1          unsigned char t1;
  72   1          unsigned long t2;
  73   1              if(isShow){
  74   2                         if(Native_Flag){
  75   3                                       LcdWriteCom(0x80+0X40);
  76   3                               LcdWriteData('0'+mHour2/16);                           //时
  77   3                                       LcdWriteData('0'+(mHour2&0x0f));
  78   3                                       LcdWriteData(':');
  79   3                                       LcdWriteData('0'+mMinute2/16);                         //分
  80   3                                       LcdWriteData('0'+(mMinute2&0x0f));
  81   3                                       WriteDataString("   ");
  82   3                                       LcdWriteCom(0x80+0x4e);
  83   3                                       WriteDataString("A2");
  84   3                         }else{
  85   3                                       LcdWriteCom(0x80+0X40);
  86   3                               LcdWriteData('0'+mHour/16);                            //时
  87   3                                       LcdWriteData('0'+(mHour&0x0f));
  88   3                                       LcdWriteData(':');
  89   3                                       LcdWriteData('0'+mMinute/16);                          //分
  90   3                                       LcdWriteData('0'+(mMinute&0x0f));
  91   3                                       WriteDataString("   ");
  92   3                                       LcdWriteCom(0x80+0x4b);
  93   3                                       WriteDataString("A1");
  94   3                         }
  95   2                         isShow=0;
  96   2              }else{
  97   2                         LcdWriteCom(0x80+0X40);
  98   2                         WriteDataString("                ");
  99   2                         isShow=1;
 100   2              }
 101   1          for(t1 = 0; t1 < t; t1++)    //双重循环, 共延时t个半拍
 102   1            for(t2 = 0; t2 < 4000; t2++); //延时期间, 可进入T0中断去发音        8000
 103   1          TR0 = 0;                        //关闭T0, 停止发音
 104   1      }
 105          //--------------------------------------
 106          void song()                      //演奏一个音符
 107          {
 108   1          TH0 = timer0h;               //控制音调
 109   1          TL0 = timer0l;
 110   1          TR0 = 1;                     //启动T0, 由T0输出方波去发音   
 111   1          delay1(timer);                 //控制时间长度
 112   1      }
 113          //--------------------------------------
 114          /*
 115           * 闹铃音乐
 116           */
 117          uchar AlarmMusic(uchar a,uchar h,uchar m,uchar s)
C51 COMPILER V9.01   MUSIC                                                                 04/21/2018 02:05:33 PAGE 3   

 118          {
 119   1          unsigned char k, i, j,num;
 120   1          TMOD = 1;                    //置T0定时工作方式1
 121   1          ET0 = 1;                     //开T0中断
 122   1          EA = 1;                      //开CPU中断
 123   1              Native_Flag = a;
 124   1              if(Native_Flag){
 125   2                      mHour2=h;
 126   2                      mMinute2=m;
 127   2              }else{
 128   2                      mHour=h;
 129   2                      mMinute=m;
 130   2              }
 131   1              Feast=0;
 132   1              num=0;
 133   1          while(1) {
 134   2                num++;
 135   2            i = 0;
 136   2            timer = 1; 
 137   2            while(timer) {
 138   3                      switch(s){
 139   4                         case 0:
 140   4                                 k = sszymmh[i] + 7 * sszymmh[i + 1] - 1;//第i个是音符, 第i+1个是第几个八度
 141   4                         timer = sszymmh[i + 2];   //读出时间长度数值
 142   4                                 j= sizeof(sszymmh)/sizeof(char);
 143   4                         break;
 144   4                         case 1:
 145   4                                 k = sszymmh1[i] + 7 * sszymmh1[i + 1] - 1;//第i个是音符, 第i+1个是第几个八度
 146   4                         timer = sszymmh1[i + 2];   //读出时间长度数值
 147   4                                 j= sizeof(sszymmh1)/sizeof(char);
 148   4                         break;
 149   4                         case 2:
 150   4                                 k = sszymmh2[i] + 7 * sszymmh2[i + 1] - 1;//第i个是音符, 第i+1个是第几个八度
 151   4                         timer = sszymmh2[i + 2];   //读出时间长度数值
 152   4                                 j= sizeof(sszymmh2)/sizeof(char);
 153   4                         break;
 154   4                      }
 155   3                      timer0h = FREQH[k];      //从数据表中读出频率数值
 156   3              timer0l = FREQL[k];      //实际上, 是定时的时间长度
 157   3              i += 3;
 158   3                      Feast=(!Feast);
 159   3              song();                  //发出一个音符
 160   3                      if(i>=j)        //sizeof(array) / sizeof(array[0])
 161   3                       {
 162   4                      timer=0;
 163   4                      }
 164   3                      if(SET==0){
 165   4                                      Lcd1602_Delay1ms(10);
 166   4                                      if(SET==0){
 167   5                                              speaker = 1;
 168   5                                              TR0 = 0;
 169   5                                              return 0;
 170   5                                      while((dd<50)&&(SET==0)){
 171   6                          Lcd1602_Delay1ms(10);
 172   6                          dd++;
 173   6                      }
 174   5                      dd=0;
 175   5                      }
 176   4                              }
 177   3      
 178   3                      }
 179   2                      if(num==3){
C51 COMPILER V9.01   MUSIC                                                                 04/21/2018 02:05:33 PAGE 4   

 180   3                         speaker = 1;
 181   3                         TR0 = 0;
 182   3                         return 1;
 183   3                      }  
 184   2              } 
 185   1      }
 186          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    548    ----
   CONSTANT SIZE    =    320    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
